name: Execute Notebook

on:
  workflow_run:
    workflows: ["Build and push container image"]
    branches: main
    types:
      - completed

env:
  # `BASE_URL` determines the website is served from, including CSS & JS assets
  # You may need to change this to `BASE_URL: ''`
  BASE_URL: /${{ github.event.repository.name }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions: write-all

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

# This job installs dependencies, build the jupyter notebook, and pushes it to `render`, a new `branch`
jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

#    permissions:
#      id-token: write
#      pages: write

    if: github.repository_owner == 'eds-book'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      # Set notebook name
      - name: Get properties from the config file
        id: config_file
        uses: notiz-dev/github-action-json-property@release
        with:
          path: '.github/config.json'
          prop_path: 'notebook_name'
      # Set quay image
      - name: Get properties from the config file
        id: config_quay
        uses: notiz-dev/github-action-json-property@release
        with:
          path: '.github/config.json'
          prop_path: 'quay_image'
      # Set kernel name
      - name: Get properties from the config file
        id: config_kernel
        uses: notiz-dev/github-action-json-property@release
        with:
          path: '.github/config.json'
          prop_path: 'kernel'
      # Render the notebook
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
            image: quay.io/${{steps.config_quay.outputs.prop}}:latest
            options: --user root -v ${{ github.workspace }}:/tmp
            shell: bash
            run: |
                v=$(jupyter kernelspec list | awk '{print $1}' | egrep ${{steps.config_kernel.outputs.prop}})
                jupyter-nbconvert --to notebook --ExecutePreprocessor.kernel_name="$v" --inplace --execute ${{steps.config_file.outputs.prop}}
                cp ${{steps.config_file.outputs.prop}}  /tmp
      - name: Commit
        run: |
          ls
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ${{steps.config_file.outputs.prop}}
          git commit -m 'update'
      - name: Push
        uses: ad-m/github-push-action@master
        with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         branch: render
         force: true